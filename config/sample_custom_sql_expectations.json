{
  "suite_name": "custom_sql_examples",
  "expectations": [
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Date Range Validation",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE NOT (start_date <= end_date) AND start_date IS NOT NULL AND end_date IS NOT NULL",
        "expected_result_type": "empty",
        "description": "Ensures that start_date is always before or equal to end_date",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Price-Quantity-Total Relationship",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE ABS(total_amount - (unit_price * quantity)) > 0.01 AND total_amount IS NOT NULL AND unit_price IS NOT NULL AND quantity IS NOT NULL",
        "expected_result_type": "empty",
        "description": "Validates that total_amount equals unit_price multiplied by quantity (with 1 cent tolerance)",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Status Consistency Check",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE status = 'completed' AND completion_date IS NULL",
        "expected_result_type": "empty",
        "description": "Ensures that records with 'completed' status have a completion_date",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Age Consistency Validation",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE age < 0 OR age > 150 OR (birth_date IS NOT NULL AND ABS(DATEDIFF(CURRENT_DATE, birth_date) / 365.25 - age) > 1)",
        "expected_result_type": "empty",
        "description": "Validates age is reasonable and consistent with birth_date if provided",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Revenue Trend Check",
        "query": "SELECT CASE WHEN SUM(revenue) >= 10000 THEN 0 ELSE 1 END as violation_count FROM {table_name} WHERE date_column >= CURRENT_DATE - INTERVAL '30' DAY",
        "expected_result_type": "empty",
        "description": "Ensures total revenue in the last 30 days is at least $10,000",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Duplicate Email Detection",
        "query": "SELECT COUNT(*) as violation_count FROM (SELECT email, COUNT(*) as email_count FROM {table_name} WHERE email IS NOT NULL GROUP BY email HAVING COUNT(*) > 1) duplicates",
        "expected_result_type": "empty",
        "description": "Ensures no duplicate email addresses exist in the dataset",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Business Hours Validation",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE transaction_type = 'customer_service' AND (HOUR(timestamp) < 8 OR HOUR(timestamp) > 18 OR WEEKDAY(timestamp) IN (5, 6))",
        "expected_result_type": "empty",
        "description": "Ensures customer service transactions only occur during business hours (8 AM - 6 PM, Monday-Friday)",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Account Balance Validation",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE account_type = 'savings' AND balance < 0",
        "expected_result_type": "empty",
        "description": "Ensures savings accounts never have negative balances",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Data Freshness Check",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE last_updated < CURRENT_DATE - INTERVAL '7' DAY",
        "expected_result_type": "count_equals",
        "expected_value": 0,
        "description": "Ensures all records have been updated within the last 7 days",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Geographic Consistency",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE country = 'USA' AND (state_code IS NULL OR LENGTH(state_code) != 2) AND state_code NOT IN ('AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY','DC')",
        "expected_result_type": "empty",
        "description": "Ensures USA addresses have valid 2-letter state codes",
        "tolerance": 0.0
      }
    },
    {
      "expectation_type": "expect_custom_sql_query_to_return_expected_result",
      "kwargs": {
        "name": "Sales Active Employee Salary Validation",
        "query": "SELECT COUNT(*) as violation_count FROM {table_name} WHERE department = 'Sales' AND active = 1 AND salary < 40000",
        "expected_result_type": "empty",
        "description": "Ensures that active Sales department employees have a salary equal to or greater than 40000",
        "tolerance": 0.0
      }
    }
  ]
}